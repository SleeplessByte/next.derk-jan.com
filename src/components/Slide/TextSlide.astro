---
type Props = { class?: string } & (
  | { "next-href"?: undefined; "next-label"?: undefined }
  | {
      "next-href": string;
      "next-label": string;
    }
);

const {
  "next-href": nextHref,
  "next-label": nextLabel,
  class: className = "",
} = Astro.props;
---

<section
  class={`slide ${className} flex-col flex-wrap place-content-center`}
  transition:name="slide"
>
  <h2
    transition:name="text"
    class="!m-0 font-bold px-12 py-6 md:text-7xl sm:text-5xl text-3xl mx-12 self-center justify-self-center"
  >
    <slot />
  </h2>

  {
    nextHref ? (
      <footer
        class="absolute right-0 top-0 bottom-0 flex items-center"
        transition:name="next"
      >
        <a rel="next" href={nextHref} class="group">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            role="img"
            stroke-width="2"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M13.5 4.5 21 12m0 0-7.5 7.5M21 12H3"
            />
            <title>{nextLabel}</title>
          </svg>
        </a>
      </footer>
    ) : null
  }
</section>
